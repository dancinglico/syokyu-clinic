//色定義
$accent-color: #21A937;
$line-color: #99E5A5;
$bg-color: #F5FCF8;
$text-main: #444;


//フォント
@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;700&display=swap');


//ブレークポイント
$sp: 767.98px; //スマホ

@mixin sp {
    @media screen and (max-width: 767.98px) {
        @content;
    }
}

@mixin tb{
    @media screen and (min-width: 768px) and (max-width: 1023px) {
    @content;
}
}

@mixin pc {
    @media screen and (min-width: 1024px) {
        @content;
    }
}


html {
    font-size: 62.5%;
    line-height: 1;
}


body {
    font-family: "Noto Sans JP", sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    color: $text-main;
    font-size: 1.6rem;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
    font-size: inherit;
    font-weight: normal;
    line-height: 1;
}


a {
    text-decoration: none;
    display: block;
    color: inherit;

    &:visited {
        color: inherit;
        text-decoration: none;
    }

    &:hover {
        opacity:0.7;
    }
}


li {
    list-style: none;
}

img {
    max-width: 100%;
    height: auto;
    vertical-align: bottom;
    overflow: hidden;
}


.content-width {
    max-width: 1220px;
    padding-inline: 20px;
    margin: 0 auto;

    @include sp{
        max-width: 100%;
        padding-inline:15px;
    }
}

/* SP、PCの表示切り替え */

.pc-only {
    //pc版
    //sp表示を消す
    display: none; // Hide on SP (screens 767px and below) 

    @include pc {
        display: inherit; // Show on PC (screens 768px and above)
    }
}

.sp-only {
    //sp版
    //pc表示を消す
    display: none; // Hide on PC (screens 768px and above)

    @include sp {
        display: inherit; // Show on SP (screens 767px and below)
    }
}

//extend用flex------
.flex {
    display: flex;
    justify-content: space-between;
    align-items: center;
}


//clamp関数--------

@function rclamp($min, $max) {

    $minViewport: 375; //最小画面幅
    $maxViewport: 1200; //最大画面幅
    $baseFontSize: 10; //標準フォントサイズ

    $vwScale: calc(($max - $min) / ($maxViewport - $minViewport)); // vw単位でのスケールを計算
    $baseOffset: $min - $minViewport * $vwScale; // 基準となる最小値からのオフセットを計算
    $minRem: calc($min / $baseFontSize); // 最小値をremに変換
    $maxRem: calc($max / $baseFontSize); // 最大値をremに変換
    $baseOffsetRem: calc($baseOffset / $baseFontSize); // オフセットをremに変換
    $vwScaleRem: $vwScale * 100; // vwスケールを調整

    @return clamp(#{$minRem}rem, #{$baseOffsetRem}rem + #{$vwScaleRem}vw, #{$maxRem}rem);
}

// 使用例
.example {
    font-size: rclamp(24, 64);
}